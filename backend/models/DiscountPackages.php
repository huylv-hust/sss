<?php

namespace app\models;

use yii\db\ActiveRecord;
use yii\db\Expression;
use yii\db\Query;

class DiscountPackages extends ActiveRecord
{
    public static function tableName()
    {
        return 'DISCOUNT_PACKAGES';
    }

    private function getWhere($filters = [], $select = '*')
    {
        $query = new Query();
        $query->select($select)->from(static::tableName());
        if (isset($filters['PARENT_DISCOUNT_ID']) && $filters['PARENT_DISCOUNT_ID']) {
            $query->andWhere('PARENT_DISCOUNT_ID =:parent_discount_id', [':parent_discount_id' => $filters['PARENT_DISCOUNT_ID']]);
        }

        if (isset($filters['offset']) && $filters['offset']) {
            $query->offset($filters['offset']);
        }

        if (isset($filters['limit']) && $filters['limit']) {
            $query->limit($filters['limit']);
        }

        return $query;
    }

    public function getData($filters = [], $select = '*')
    {
        $query = $this->getWhere($filters, $select);
        $query->orderBy('ID DESC');
        return $query->all();
    }

    public function countData($filters = [], $select = 'ID')
    {
        $query = $this->getWhere($filters, $select);
        return $query->count();
    }

    public function getDataByParent($parent_id)
    {
        $data = $this->findAll(['PARENT_DISCOUNT_ID' => $parent_id]);
        $package_discount = [];

        foreach ($data as $k => $v) {
            $package_discount[$k]['NAME'] = $v['NAME'];
            $package_discount[$k]['ID'] = $v['ID'];
        }

        return $package_discount;
    }

    public function getSeq()
    {
        $command = \Yii::$app->db->createCommand('SELECT DISCOUNT_PACKAGES_SEQ.nextval FROM dual');
        $res = $command->queryAll();
        return $res['0']['NEXTVAL'];
    }

    public function beforeSave($insert)
    {
        $this->UPDATED_AT = new Expression("CURRENT_DATE");
        if (!$this->ID) {
            $this->CREATED_AT = new Expression("CURRENT_DATE");
            $this->ID = $this->getSeq();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
